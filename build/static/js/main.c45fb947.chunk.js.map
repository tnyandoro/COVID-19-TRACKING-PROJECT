{"version":3,"sources":["redux/covidDataAPI/index.js","redux/continentalCovidData/continentCovid.types.js","redux/continentalCovidData/continentCovid.actions.js","redux/countryCovidData/countryCovid.types.js","redux/countryCovidData/countryCovid.actions.js","components/covid.png","components/Home/index.js","components/Details/index.js","components/Nav.jsx","App.js","redux/continentalCovidData/continentCovid.reducer.js","redux/countryCovidData/countryCovid.reducer.js","redux/configureStore.js","index.js"],"names":["BASE_URL","REQUEST_COVID_DATA","REQUEST_COVID_DATA_SUCCESS","ERROR_REQUESTING_COVID_DATA","errorRequestingCovidData","error","type","payload","fetchCovidData","country","dispatch","a","axios","get","continent","then","response","result","Object","values","data","catch","REQUEST_COUNTRY_COVID_DATA","REQUEST_COUNTRY_COVID_DATA_SUCCESS","REQUEST_COUNTRY_COVID_DATA_FAILURE","fetchCountryData","getCountry","requestCountryCovidDataFailure","override","css","Home","continentalCovidData","useSelector","covidData","useDispatch","useState","isLoading","setIsLoading","region","setRegion","useEffect","className","Container","Row","Col","xs","src","covid","alt","toUpperCase","Form","Group","Select","value","onChange","e","target","map","All","population","capital_city","md","Card","Body","Title","Button","onClick","to","icon","faArrowAltCircleRight","size","Text","abbreviation","color","loading","Details","countryCovidData","length","confirmed","recovered","deaths","Nav","history","useHistory","goBack","faChevronLeft","faMicrophone","faCog","App","exact","path","render","initialState","covidReducer","state","action","countryCovidDataReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c45fb947.chunk.js","sourcesContent":["const BASE_URL = 'https://covid-api.mmediagroup.fr/v1/cases?';\n\nexport const getContinent = (continent) => `${BASE_URL}continent=${continent}`;\n\nexport const getCountry = (country) => `${BASE_URL}country=${country}`;\n","export const REQUEST_COVID_DATA = 'REQUEST_COVID_DATA';\nexport const REQUEST_COVID_DATA_SUCCESS = 'REQUEST_COVID_DATA_SUCCESS';\nexport const ERROR_REQUESTING_COVID_DATA = 'ERROR_REQUESTING_COVID_DATA';\n","import axios from 'axios';\nimport { getContinent } from '../covidDataAPI';\nimport {\n  REQUEST_COVID_DATA,\n  REQUEST_COVID_DATA_SUCCESS,\n  ERROR_REQUESTING_COVID_DATA,\n} from './continentCovid.types';\n\nexport const requestCovidData = () => ({\n  type: REQUEST_COVID_DATA,\n});\n\nexport const requestCovidDataSucess = (data) => ({\n  type: REQUEST_COVID_DATA_SUCCESS,\n  payload: data,\n});\n\nexport const errorRequestingCovidData = (error) => ({\n  type: ERROR_REQUESTING_COVID_DATA,\n  payload: error,\n});\n\nconst fetchCovidData = (country) => async (dispatch) => {\n  dispatch(requestCovidData());\n  axios.get(getContinent(country))\n    .then((response) => {\n      const result = Object.values(response.data);\n\n      dispatch(requestCovidDataSucess(result));\n    }).catch((error) => {\n      dispatch(errorRequestingCovidData(error));\n    });\n};\n\nexport default fetchCovidData;\n","export const REQUEST_COUNTRY_COVID_DATA = 'REQUEST_COUNTRY_COVID_DATA';\nexport const REQUEST_COUNTRY_COVID_DATA_SUCCESS = 'REQUEST_COUNTRY_COVID_DATA_SUCCESS';\nexport const REQUEST_COUNTRY_COVID_DATA_FAILURE = 'REQUEST_COUNTRY_COVID_DATA_FAILURE';\n","import axios from 'axios';\nimport { getCountry } from '../covidDataAPI';\nimport {\n  REQUEST_COUNTRY_COVID_DATA,\n  REQUEST_COUNTRY_COVID_DATA_SUCCESS,\n  REQUEST_COUNTRY_COVID_DATA_FAILURE,\n} from './countryCovid.types';\n\nexport const requestCountryCovidData = () => ({\n  type: REQUEST_COUNTRY_COVID_DATA,\n});\n\nexport const requestCountryCovidDataSuccess = (payload) => ({\n  type: REQUEST_COUNTRY_COVID_DATA_SUCCESS,\n  payload,\n});\n\nexport const requestCountryCovidDataFailure = (error) => ({\n  type: REQUEST_COUNTRY_COVID_DATA_FAILURE,\n  payload: error,\n});\n\nconst fetchCountryData = (country) => (dispatch) => {\n  dispatch(requestCountryCovidData());\n\n  axios.get(getCountry(country))\n    .then((response) => {\n      const result = Object.values(response.data);\n      dispatch(requestCountryCovidDataSuccess(result));\n    }).catch((error) => {\n      dispatch(requestCountryCovidDataFailure(error));\n    });\n};\n\nexport default fetchCountryData;\n","export default __webpack_public_path__ + \"static/media/covid.9a3b28fb.png\";","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { css } from '@emotion/react';\nimport {\n  Container, Col, Row, Form, Card, Button,\n} from 'react-bootstrap';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport fetchCovidData from '../../redux/continentalCovidData/continentCovid.actions';\nimport fetchCountryData from '../../redux/countryCovidData/countryCovid.actions';\nimport './Index.css';\nimport covid from '../covid.png';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst Home = () => {\n  const continentalCovidData = useSelector(({ continent }) => continent.covidData);\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [region, setRegion] = useState('africa');\n\n  useEffect(() => {\n    (async () => {\n      await dispatch(fetchCovidData(region));\n      setIsLoading(true);\n    })();\n  }, [region]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row className=\"title\">\n          <Col xs={6}>\n            <img src={covid} alt=\"covid\" className=\"img\" />\n          </Col>\n          <Col xs={6} className=\"regionName\">\n            <h1 className=\"region\">{region.toUpperCase()}</h1>\n          </Col>\n        </Row>\n        <Row className=\"my-3\">\n          <Col xs={12}>\n            <Form>\n              <Form.Group>\n                <Form.Select value={region} arial-label=\"Select region\" onChange={(e) => setRegion(e.target.value)}>\n                  <option>Select region</option>\n                  <option value=\"africa\">Africa</option>\n                  <option value=\"asia\">Asia</option>\n                  <option value=\"europe\">Europe</option>\n                  <option value=\"australia\">Australia</option>\n                  <option value=\"north america\">North America</option>\n                  <option value=\"south america\">South America</option>\n                </Form.Select>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n        {\n          !isLoading ? (<ClipLoader color=\"green\" loading={isLoading} css={override} size={150} />) : (\n            <Row>\n              {\n                continentalCovidData && continentalCovidData.map((data) => {\n                  const { country, population, capital_city } = data.All;\n                  return (\n                    <Col className=\"card\" xs={6} md={3} key={data.abbreviation}>\n                      <Card>\n                        <Card.Body>\n                          <Card.Title>\n                            Country: &nbsp;\n                            { country }\n                            <Button className=\"btn\" type=\"button\" onClick={() => dispatch(fetchCountryData(country))}>\n                              <Link to={`/country/${country}`} className=\"text-light\"><FontAwesomeIcon icon={faArrowAltCircleRight} size=\"1.5x\" /></Link>\n                            </Button>\n                          </Card.Title>\n                          <Card.Text>\n                            <span>\n                              {' '}\n                              Capital City: &nbsp;\n                              {capital_city}\n                            </span>\n                            {' '}\n                            &nbsp;\n                            <br />\n                            <span>\n                              {' '}\n                              Population: &nbsp;\n                              {population}\n                            </span>\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  );\n                })\n              }\n            </Row>\n          )\n        }\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Container,\n} from 'react-bootstrap';\n\nfunction Details() {\n  const countryCovidData = useSelector(({ country }) => country.covidData);\n\n  return (\n    <Container>\n      <div className=\"details_page\">\n        <div className=\"inside\">\n          {\n        countryCovidData.length > 0 ? countryCovidData.map(({\n          confirmed, recovered, deaths, country, capital_city, abbreviation,\n        }) => (\n          <div className=\"country\" key={abbreviation}>\n            <h3>Covid-19 Details</h3>\n            <div>\n              <h4>\n                Country: &nbsp;\n                { country }\n              </h4>\n            </div>\n            <div>\n              <h5 className=\"cases\">\n                Comfirmed Cases: &nbsp;\n                { confirmed }\n              </h5>\n            </div>\n            <div>\n              <h4>\n                Deaths: &nbsp;\n                { deaths }\n              </h4>\n              <h5>\n                {' '}\n                Recovered: &nbsp;\n                { recovered }\n              </h5>\n              <h5>\n                Capital: &nbsp;\n                { capital_city }\n              </h5>\n            </div>\n\n          </div>\n        )) : (\n          <p>No data to display...</p>\n        )\n      }\n        </div>\n        <div>\n          <p><FontAwesomeIcon icon={faArrowAltCircleRight} /></p>\n        </div>\n      </div>\n    </Container>\n\n  );\n}\n\nexport default Details;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport { faChevronLeft, faMicrophone, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  BrowserRouter as Router, useHistory,\n} from 'react-router-dom';\nimport './Nav.css';\n\nexport default function Nav() {\n  const history = useHistory();\n\n  return (\n    <Router>\n      <header>\n        <nav className=\"nav\">\n          <span onClick={() => history.goBack()}>\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </span>\n          <h4>2019</h4>\n          <h4>COVID-19</h4>\n          <FontAwesomeIcon icon={faMicrophone} />\n          <FontAwesomeIcon icon={faCog} />\n\n        </nav>\n      </header>\n    </Router>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Details from './components/Details';\nimport Nav from './components/Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Home />\n          )}\n        />\n        <Route\n          exact\n          path=\"/country/:countryName\"\n          render={() => (\n            <Details />\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  REQUEST_COVID_DATA,\n  REQUEST_COVID_DATA_SUCCESS,\n  ERROR_REQUESTING_COVID_DATA,\n} from './continentCovid.types';\n\nconst initialState = {\n  isLoading: false,\n  covidData: [],\n  error: '',\n};\n\nconst covidReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST_COVID_DATA:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case REQUEST_COVID_DATA_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        covidData: action.payload,\n        error: '',\n      };\n\n    case ERROR_REQUESTING_COVID_DATA:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default covidReducer;\n","import {\n  REQUEST_COUNTRY_COVID_DATA,\n  REQUEST_COUNTRY_COVID_DATA_SUCCESS,\n  REQUEST_COUNTRY_COVID_DATA_FAILURE,\n} from './countryCovid.types';\n\nconst initialState = {\n  isLoading: false,\n  covidData: [],\n  error: '',\n};\n\nconst countryCovidDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST_COUNTRY_COVID_DATA:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case REQUEST_COUNTRY_COVID_DATA_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        covidData: action.payload,\n        error: '',\n      };\n\n    case REQUEST_COUNTRY_COVID_DATA_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default countryCovidDataReducer;\n","import thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport covidReducer from './continentalCovidData/continentCovid.reducer';\nimport countryCovidDataReducer from './countryCovidData/countryCovid.reducer';\n\nconst rootReducer = combineReducers({\n  continent: covidReducer,\n  country: countryCovidDataReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}